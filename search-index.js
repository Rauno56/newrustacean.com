var N=null,E="",T="t",U="u",searchIndex={};
var R=["show_notes","circle","show_notes::e003","relatedishthings","string","show_notes::e006","a_public_module_fn","A module function, demonstrating module-public function…","tryresult","expressive","filedata","contents","demonstrate_match","bjustclonepoint","Generate a point at 0, 0, 0","Pancakes","Demonstrate the ability to take a trait constraint on a…","Script","Meet My Associates","translate","show_notes::bonus","show_notes::cysk","Crates You Should Know: Serde","show_notes::interview","show_notes::interview::diesel_1_0","Transcript – coming at some point!","show_notes::interview::irr_2017","Transcript","Transcript coming soon!","show_notes::interview::rbr_2017","Anthony Deschamps","Ben Striegel","Holden Marcsisin","Jess Saxeter","Transcript: coming soon!","show_notes::news","Rust 1.24","Rust 1.26","Rust 1.27","Rust 1.28","Rust 1.29 and 1.30","part_1","part_2","show_notes::news::rust_1_31","show_notes::e001","result","borrow_mut","show_notes::e002","try_from","try_into","borrow","type_id","show_notes::e004::struct_container","typeid","show_notes::e008","show_notes::e009","to_string","show_notes::e011","show_notes::e012","show_notes::e013","show_notes::e014::demo_deref","show_notes::e015","show_notes::e016","to_owned","clone_into","show_notes::e017","show_notes::e018","show_notes::e019","show_notes::e021","into_iter","show_notes::e022","show_notes::e023","show_notes::e024","show_notes::e025","show_notes::e026","show_notes::e027","show_notes::e028","show_notes::e029","show_notes::bonus::_10","show_notes::bonus::_13","show_notes::bonus::_14","show_notes::bonus::burnout","show_notes::bonus::translating_between_languages","show_notes::cysk::serde","show_notes::cysk::wasm","show_notes::interview::diesel_1_0::part_1","show_notes::interview::diesel_1_0::part_2","show_notes::interview::irr_2017::anna_liao","show_notes::interview::irr_2017::lee_baillie","show_notes::interview::irr_2017::matt_gathu","show_notes::interview::rbr_2017::andrew_hobden","show_notes::interview::rbr_2017::anthony_deschamps","show_notes::interview::rbr_2017::arun_kulshreshthra","show_notes::interview::rbr_2017::ben_beckwith","show_notes::interview::rbr_2017::ben_striegel","show_notes::interview::rbr_2017::colin_dean","show_notes::interview::rbr_2017::esty_thomas","show_notes::interview::rbr_2017::holden_marcsisin","show_notes::interview::rbr_2017::jess_saxeter","show_notes::interview::rbr_2017::katie_nolan","show_notes::interview::rbr_2017::matthias_endler","show_notes::interview::rbr_2017::parry_wilcox","show_notes::interview::rbr_2017::pete_lyons","show_notes::interview::rbr_2017::thomas_gideon","show_notes::interview::rbr_2017::tom_kriezkowski","show_notes::news::rust_1_20","show_notes::news::rust_1_21_1_22","show_notes::news::rust_1_23","show_notes::news::rust_1_24","show_notes::news::rust_1_25","show_notes::news::rust_1_26","show_notes::news::rust_1_27","show_notes::news::rust_1_28","show_notes::news::rust_1_29_1_30","show_notes::news::rust_1_31::part_1","show_notes::news::rust_1_31::part_2","show_notes::news::rust_1_32","get_some_integer","doubleandone","emailstruct","simplecontainer","ccopypoint","formatter","PreexistingStruct","RelatedishThings","MethodDemonstrator","SimpleType","GenericContainer","DoubleAndOne","ASimpleTrait","TypeSystem","Expressive","StaticallyKnown","ThreeTypes","Individual","NumericReference","SimpleContainer","SimpleNonCopyable","DataStore","NoImplsAtAll","HasAllTheImpls","ANoCopyOrClonePoint","BJustClonePoint","CCopyPoint","EmailStruct","ThingToDestructure","EmailEnum","Breakfast","MoarBreakfast","DerefTarget","ASendableType"];

searchIndex[R[0]]={"doc":"Show notes","i":[[0,"e000",R[0],"Hello, world!",N,N],[5,"hello_world","show_notes::e000","Prints \"Hello, world!\" if you import it somewhere and run…",N,[[]]],[0,"e001",R[0],"Document all the things!",N,N],[3,"TVShow",R[44],"This is a sample structure, to demonstrate…",N,N],[12,"theme",E,"Here is a string telling us what the theme song was.",0,N],[12,"year",E,"Here is the year the show premiered.",0,N],[12,"director",E,"Here is the director---but (s)he's rather shy and private.",0,N],[5,"use_members",E,"This documents a plain-old function.",N,[[]]],[11,"new",E,"This documents a fairly ho-hum structure constructor.",0,[[["str"],["i32"]],["tvshow"]]],[0,"e002",R[0],"Something borrowed, something... moved?",N,N],[3,"Circle",R[47],"This struct is simple but useful to see how borrowing and…",N,N],[12,"x",E,"X position of the circle's origin.",1,N],[12,"y",E,"Y position of the circle's origin",1,N],[12,"r",E,"Radius of the circle",1,N],[5,"demonstrate_ownership",E,"Demonstrates how borrowing works with plain old functions.",N,[[]]],[5,R[50],E,"Demonstrates general borrowing of an immutable reference.",N,[[[R[1]]]]],[5,R[46],E,"Demonstrates general borrowing of a mutable reference.",N,[[[R[1]]]]],[5,"move_circle",E,"Demonstrates general moving of an instance.",N,[[[R[1]]]]],[5,"demonstrate_method_ownership",E,"Demonstrates how the same concepts apply when dealing with…",N,[[]]],[11,"origin",E,"Creates a `Circle` instance centered on the \"origin\" (x =…",1,[[["f64"]],[R[1]]]],[11,"new",E,"Creates a `Circle` instance centered on specified x, y…",1,[[["f64"]],[R[1]]]],[11,"x_by_ref",E,"Returns the value of `Circle.x`, borrowing an immutable…",1,[[["self"]],["f64"]]],[11,"x_by_mut_ref",E,"Returns the value of `Circle.x`, borrowing a mutable…",1,[[["self"]],["f64"]]],[11,"by_take",E,"Returns the value of `Circle.x`, taking ownership of the…",1,[[],["f64"]]],[11,"by_take_mut",E,"Returns the value of `Circle.x`, taking ownership of a…",1,[[],["f64"]]],[0,"e003",R[0],"No. more. nulls.",N,N],[3,R[123],R[2],"Just exists to be used as an element in `RelatedishThings`.",N,N],[12,"some_int",E,E,2,N],[12,"some_string",E,E,2,N],[4,R[124],E,"An enumeration can hold a variety of types. This one shows…",N,N],[13,"Unit",E,"This doesn't have a value other than being…",3,N],[13,"SomeName",E,"It could be a tuple struct, with basically any value type…",3,N],[13,"SomeValue",E,E,3,N],[13,"ComplexData",E,"It can be a full-on struct-type construct.",3,N],[12,"description","show_notes::e003::RelatedishThings",E,3,N],[12,"number",E,E,3,N],[13,"ReusedStructure",R[2],"And it can use other complex data types within those, of…",3,N],[5,"get_unit",E,"Shows how returning a `RelatedishThings::Unit` instance…",N,[[],[R[3]]]],[5,"get_name",E,"Shows how returning a `RelatedishThings::SomeName`…",N,[[],[R[3]]]],[5,"get_value",E,"Shows how returning a `RelatedishThings::SomeValue`…",N,[[],[R[3]]]],[5,"get_complex_data",E,"Shows how returning a `RelatedishThings::ComplexData`…",N,[[],[R[3]]]],[5,"get_reused_structure",E,"Shows how returning a `RelatedishThings::ReusedStructure`…",N,[[],[R[3]]]],[5,"demonstrate_basic_enumeration",E,"Shows how the result of an enum comes back as increasingly…",N,[[]]],[5,R[12],E,"Shows in a bit more detail how `match` works.",N,[[]]],[5,"get_an_option",E,"Shows how this is used in a more meaningful context, with…",N,[[["bool"]],[["f64"],["option",["f64"]]]]],[5,"demonstrate_option",E,"Shows how an option type works in practice.",N,[[]]],[5,"get_a_result",E,"Shows how to return either a meaningful result or an error…",N,[[["bool"]],[[R[4]],["f64"],[R[45],["f64",R[4]]]]]],[5,"demonstrate_result",E,"Shows how a `Result` type works in practice.",N,[[]]],[0,"e004",R[0],"Functionalized",N,N],[5,"demonstrate_methods","show_notes::e004","Shows how to use both struct and instance methods.",N,[[]]],[5,"apply_function_to_i64",E,"Shows how to take a function as an argument.",N,[[["i64"],["f"]],["i64"]]],[5,"demonstrate_function_arguments",E,"Show how to call a function with a function as an argument.",N,[[]]],[5,"demonstrate_closure_environment",E,"Shows how closures can act on elements within their…",N,[[]]],[0,"struct_container",E,"Create a module so we can see public/private behavior.",N,N],[3,R[125],R[52],"Shows how methods work. Elaborates only a little on the…",N,N],[12,"an_int",E,E,4,N],[12,"a_string",E,E,4,N],[12,"a_tuple",E,"A tuple holding a floating point value and a string slice.…",4,N],[11,"new",E,"A standard constructor pattern.",4,[[],["methoddemonstrator"]]],[11,"method",E,"A standard struct instance method.",4,[[["self"]]]],[11,"get_hidden_data",E,"A getter for data which is not publicly accessible in the…",4,[[["self"]]]],[0,"e005",R[0],"Allocate it where?",N,N],[5,"doubler_factory","show_notes::e005","Creates a function which doubles an integer.",N,[[],[["fn"],["box",["fn"]]]]],[5,"doubler_closure_factory",E,"Creates a closure which doubles an integer.",N,[[],[["fn"],["box",["fn"]]]]],[5,"demonstrate_function_returns",E,"Uses the `doubler_factory` to get a function which doubles…",N,[[]]],[0,"e006",R[0],"Modularize this!",N,N],[5,"use_modules_internal",R[5],"Demonstrates the use of modules and namespaces.",N,[[]]],[5,"demonstrate_use_inside_function",E,"Demonstrates that modules can be `use`d within functions.",N,[[]]],[0,"internal_module",E,"This is an internal module. Note that it isn't public.",N,N],[5,R[6],"show_notes::e006::internal_module",R[7],N,[[]]],[5,"a_private_module_fn",E,"Another module function, demonstrating module-private…",N,[[]]],[0,"public_internal_module",R[5],"This is an internal module which is public.",N,N],[5,R[6],"show_notes::e006::public_internal_module","A public function in a public module.",N,[[]]],[5,"some_private_fn",E,"A private function in a public modules.",N,[[]]],[0,"demonstrate_namespacing",R[5],E,N,N],[5,"demonstrate_globbed_calls","show_notes::e006::demonstrate_namespacing","Demonstrates how glob-imported `use`s works.",N,[[]]],[5,"demonstrate_aliased_calls",E,"Demonstrates how aliased namespaces work.",N,[[]]],[0,"demonstrate_nesting",R[5],"Give an example of nested modules.",N,N],[5,"now_public_fn","show_notes::e006::demonstrate_nesting",R[7],N,[[]]],[0,"a_nested_module",E,"This is just a nested module.",N,N],[0,"e007",R[0],"Testify",N,N],[5,"add","show_notes::e007","A trivial function for a trivial test. See the source!",N,[[["f64"]],["f64"]]],[0,"e008",R[0],"Just like something else",N,N],[3,R[126],R[54],"A simple type to illustrate trait implementation.",N,N],[12,"a",E,E,5,N],[12,"b",E,E,5,N],[3,R[127],E,"This is just a container which can hold any two types.",N,N],[12,T,E,E,6,N],[12,U,E,E,6,N],[4,"Maybe",E,"This is `Option<T>`, but using Haskell's names instead.",N,N],[13,"Nothing",E,E,7,N],[13,"Just",E,E,7,N],[5,"a_generic",E,"Demonstrate a function generic over any type.",N,[[[T]]]],[5,"a_generic_printable",E,"Demonstrate a function with a trait bound on a generic.",N,[[["debug"]]]],[0,"e009",R[0],"Composing a Rustic tune",N,N],[3,R[128],R[55],"Define a simple struct on which to implement `Iterator`...…",N,N],[12,"value",E,"A value to double and add one to on every `next()` call.",8,N],[5,"demonstrate_for",E,"Demonstrate using a for loop over an (infinite!) iterator.",N,[[]]],[8,R[129],E,"Define a simple trait so we can see how it works.",N,N],[10,R[117],E,"Have the item return an integer.",9,[[["self"]],["i64"]]],[11,"a_default_print",E,"Have the item print and then return some string.",9,[[["self"]],["str"]]],[11,"default",E,"Start with 0.",8,[[],[R[118]]]],[0,"e010",R[0],"Macros rule!",N,N],[5,"demonstrate_try","show_notes::e010","Demonstrate how `try!` works in practice.",N,[[[R[8]]],[R[8]]]],[6,"TryResult",E,"Trivial alias for Result for convenience.",N,N],[0,"e011",R[0],"Once upon a type",N,N],[3,R[130],R[57],"Look, we composed those enums into another type. How...…",N,N],[12,"name",E,E,10,N],[12,R[9],E,E,10,N],[12,"strong",E,E,10,N],[12,"statically_known",E,E,10,N],[4,R[131],E,"Is the thing \"expressive\", whatever that means?",N,N],[13,"Ridiculously",E,E,11,N],[13,"PrettyDarn",E,E,11,N],[13,"Fairly",E,E,11,N],[13,"SortOf",E,E,11,N],[13,"Barely",E,E,11,N],[13,"NotEvenALittle",E,E,11,N],[4,"Strong",E,"Is the thing strong?",N,N],[13,"Indeed",E,E,12,N],[13,"ABit",E,E,12,N],[13,"NotEspecially",E,E,12,N],[13,"NopeNopeNope",E,E,12,N],[4,R[132],E,"Is the thing statically known?",N,N],[13,"Yeah",E,E,13,N],[13,"Nope",E,E,13,N],[5,"describe_type_systems",E,"An incredibly contrived function which just shows enums at…",N,[[]]],[11,"builder",E,E,10,[[["str"],[R[9]],["strong"],["staticallyknown"]],["typesystem"]]],[0,"e012",R[0],"I'm not familiar with that expression",N,N],[4,R[133],R[58],E,N,N],[13,"_First",E,E,14,N],[13,"Second",E,E,14,N],[13,"_Third",E,E,14,N],[5,"functions_are_expressions",E,"Functions are expressions, and so are their contents.",N,[[],["i32"]]],[5,"if_blocks_are_expressions",E,"Like functions, if blocks are expressions.",N,[[],["f64"]]],[5,"match_blocks_are_expressions",E,"Match blocks are also expressions.",N,[[],[R[4]]]],[5,"ordinary_blocks_are_expressions",E,"Block blocks are also expressions!",N,[[],["i32"]]],[0,"e013",R[0],"Staying alive",N,N],[3,R[134],R[59],"An individual person defined in a way that includes a…",N,N],[12,"name",E,"The person's name, as a string reference.",15,N],[12,"age",E,"Just in case we're talking about a character from Genesis",15,N],[4,R[135],E,"A reference to a number, either integral or…",N,N],[13,"IntRef",E,E,16,N],[13,"FloatRef",E,E,16,N],[5,"refs_all_around",E,"Get a(n optional) sub-slice of a slice.",N,[[],["option"]]],[0,"e014",R[0],"Stringing things along",N,N],[5,"get_a_slice","show_notes::e014","Get a string slice. Note the required lifetime specifier…",N,[[],["str"]]],[5,"get_a_string",E,"Get a `String` instance. Note there's no lifetime.",N,[[],[R[4]]]],[5,"show_from_behavior",E,"It's easy enough to get a `String` from a `str`.",N,[[],[R[4]]]],[5,"demonstrate_unicode",E,"Print a 🚀, just because we can.",N,[[]]],[5,"get_back_some_unicode",E,E,N,[[["str"]],[R[4]]]],[5,"get_a_string_with_capacity",E,"Get a `String` with a specified capacity.",N,[[["usize"]],[R[4]]]],[0,"demo_deref",E,"Demonstrate dereferencing. (You'll want to read this…",N,N],[3,"Origin",R[60],"A no-content struct to serve as the type to dereference…",N,N],[3,R[149],E,"A no-content struct to serve as the target to dereference…",N,N],[0,"e015",R[0],"Not dumb pointers.",N,N],[3,"FileData",R[61],"A trivial (and frankly rather silly) example for use with…",N,N],[12,R[11],E,E,17,N],[3,R[150],E,E,N,N],[5,"print_rc_count",E,"Note that this function is generic: it will work for any…",N,[[["rc"]]]],[5,"print_rc_body",E,"Note that this function is not generic because it assumes…",N,[[["rc"]]]],[5,"demonstrate_rc",E,"Demonstrate the basics of reference-counted types. (Read…",N,[[]]],[5,"get_empty_weak",E,"Note that this takes ownership of the data.",N,[[[R[10]],["rc",[R[10]]]],[[R[10]],["weak",[R[10]]]]]],[5,"get_wrapped_file_data",E,E,N,[[],[[R[10]],["rc",[R[10]]]]]],[11,"new",E,E,17,[[["str"]],[R[10]]]],[0,"e016",R[0],"`RefCell`s and code smells",N,N],[3,R[136],R[62],"A container showing a type where `Cell<T>` works with…",N,N],[12,R[11],E,E,18,N],[3,R[137],E,"A container showing where `Cell<T>` doesn't work and…",N,N],[12,R[11],E,E,19,N],[5,"demonstrate_need_for_cell",E,"Demonstrate how you need `Cell<T>` even just with a…",N,[[],[["cell",[R[120]]],["vec",["cell"]]]]],[5,"double_cell",E,"Operate mutably on the contenets of an immutable reference…",N,[[]]],[5,"add_to_each_string",E,"Demonstrate interior mutability with `Rc` and `RefCell`.",N,[[["str"]]]],[0,"e017",R[0],"Point me where I need to go",N,N],[3,R[138],R[65],"A dummy container for use with references.",N,N],[12,R[11],E,E,20,N],[5,"demonstrate_ref",E,"Give a basic example of how the reference operator works.",N,[[]]],[5,"demonstrate_deref",E,"A simple example of using the dereference operator.",N,[[]]],[5,R[12],E,"A simple demonstration of matching against a reference type.",N,[[]]],[11,"new",E,E,20,[[["i32"]],["datastore"]]],[0,"e018",R[0],"`Borrow`, `AsRef`, `Deref`: my head hurts now",N,N],[3,R[139],R[66],"A struct for showing that you cannot use `Borrow`, `AsRef`",N,N],[12,"_contents",E,E,21,N],[3,R[140],E,"Demonstrate borrowing the internal contents of the item.",N,N],[12,R[11],E,E,22,N],[5,"takes_a_borrowable",E,"Take it implementing `Borrow<[u8]>`.",N,[[[R[50]]],[R[45]]]],[5,"takes_a_reference",E,"Take it implementing `AsRef<[u8]>`. Note similarity to…",N,[[["asref"]],[R[45]]]],[5,"coerces_via_deref",E,"Take the same type by `Deref` coercion at the call site.",N,[[],[R[45]]]],[11,"new",E,E,21,[[],["noimplsatall"]]],[11,"new",E,E,22,[[],["hasalltheimpls"]]],[0,"e019",R[0],"Let's `Clone` a `Cow`!",N,N],[3,R[141],R[67],"A non-copyable point type",N,N],[12,"x",E,E,23,N],[12,"y",E,E,23,N],[12,"z",E,E,23,N],[3,R[142],E,"A struct which implements `Clone` but not `Copy`.",N,N],[12,"x",E,E,24,N],[12,"y",E,E,24,N],[12,"z",E,E,24,N],[3,R[143],E,"A struct with identical behavior to `ANoCopyOrClonePoint`,…",N,N],[12,"x",E,E,25,N],[12,"y",E,E,25,N],[12,"z",E,E,25,N],[5,"demonstrate_cow",E,"The `Cow` type can wrap around other types and make them…",N,[[[R[13]]]]],[5,"demonstrate_mut_cow",E,"What if we need a mutable reference to the wrapped type?",N,[[[R[13]]]]],[11,"origin",E,R[14],23,[[],["anocopyorclonepoint"]]],[11,"origin",E,E,24,[[],[R[13]]]],[11,"origin",E,R[14],25,[[],[R[121]]]],[0,"e020",R[0],"Putting code in its place",N,N],[0,"e021",E,"Keeping your types under cover",N,N],[3,R[144],R[68],"A \"newtype\" built by wrapping a `String` in a tuple struct.",N,N],[12,"0",E,E,26,N],[3,R[145],E,"A simple thing to demonstrate destructuring",N,N],[12,"a_field",E,"Just a field we can destructure.",27,N],[12,"another",E,"And another field we can destructure.",27,N],[4,R[146],E,"A \"newtype\" built by wrapping a `String` in a…",N,N],[13,"Address",E,E,28,N],[5,"send",E,"A simple function showing you can use a `String` where an…",N,[[["email"]]]],[5,"takes_a_str",E,"A function which takes a string, to use with `Deref` and…",N,[[["str"]]]],[6,"Email",E,"A type alias for a string that is appropriate to use as an…",N,N],[11,"map",E,E,26,[[["fnonce"]],[R[119]]]],[0,"e022",R[0],"`Send` and `Sync`",N,N],[3,R[17],R[70],"Full script for the episode.",N,N],[5,"demo_send_and_sync",E,"How `Send` and `Sync` work",N,[[]]],[0,"e023",R[0],"Traits Deep Dive, Part 1",N,N],[3,R[17],R[71],"e023: Traits Deep Dive, Part I",N,N],[4,R[147],E,"Breakfast is eatable, so `Breakfast` is `Eatable`!",N,N],[13,"Waffles",E,E,29,N],[13,"Cereal",E,E,29,N],[13,R[15],E,E,29,N],[4,R[148],E,"Moar Breakfast is even better, so `MoarBreakfast` is also…",N,N],[13,"Waffles",E,E,30,N],[13,"Cereal",E,E,30,N],[13,R[15],E,E,30,N],[13,"FrenchToast",E,E,30,N],[13,"Bagels",E,E,30,N],[5,"demo_eatable",E,"Shows how you can use traits with your own and others'…",N,[[]]],[8,"Eatable",E,"A trait, to be implemented by types like `Breakfast`.",N,N],[10,"prepare",E,"The stuff to do before you eat things. (No implementation!)",31,[[["self"]],[R[4]]]],[11,"eat",E,"How to eat things. (Has a default implementation.)",31,[[["self"]],[R[4]]]],[8,"Nomable",E,"Just another way to eat things – exists to show…",N,N],[11,"eat",E,E,32,[[["self"]],[R[4]]]],[0,"e024",R[0],"Traits Deep Dive, Part 2",N,N],[3,R[17],R[72],"e024: Traits Deep Dive, Part II",N,N],[3,"Point",E,"A data structure which will implement `std::ops::Add`.",N,N],[12,"x",E,E,33,N],[12,"y",E,E,33,N],[12,"z",E,E,33,N],[5,"to_string_inline",E,R[16],N,[[["display"]],[R[4]]]],[5,"to_string_with_where",E,R[16],N,[[[T]],[R[4]]]],[8,"Eatable",E,"Demonstrate a generic trait.",N,N],[10,"eat",E,E,34,[[["self"]],[T]]],[0,"e025",R[0],"Traits Deep Dive, Part 3",N,N],[3,"Point",R[73],E,N,N],[12,"x",E,E,35,N],[12,"y",E,E,35,N],[3,R[17],E,"e025: Traits Deep Dive, Part III",N,N],[5,"distance_from_boxed",E,E,N,[[["point"]],[["box",["fnmut"]],["fnmut"]]]],[5,"distance_from_alias",E,E,N,[[["point"]],["distancefrom"]]],[5,"distance_from_impl",E,E,N,[[["point"]]]],[6,"DistanceFrom",E,E,N,N],[0,"e026",R[0],"Functional Programming Ideas",N,N],[3,R[17],R[74],"e026: Functional Programming Ideas in Rust",N,N],[0,"e027",R[0],"Trust Me; I Promise!",N,N],[3,R[17],R[75],"e027: I Promise; Trust Me",N,N],[0,"e028",R[0],R[18],N,N],[3,R[17],R[76],R[18],N,N],[0,"e029",R[0],"I’m Out to C",N,N],[3,"Point",R[77],"An example of a slightly more complex data structure we…",N,N],[12,"x",E,E,36,N],[12,"y",E,E,36,N],[3,R[17],E,"e029: I’m Out To C",N,N],[5,"add",E,"A safe interface for the unsafe `ffi::add`.",N,[[["i32"]],[["option",["i32"]],["i32"]]]],[5,R[19],E,"A safe interface for the unsafe `ffi::translate` function.",N,[[["point"],["f32"]]]],[0,"ffi",E,"The module with all the unsafe code in it! You'll want to…",N,N],[5,"add","show_notes::e029::ffi","A mostly-trivial example: addition in C instead of in…",N,N],[5,R[19],E,"An example of a C function we can call with an object.",N,N],[0,"bonus",R[0],"Bonus episodes: shorter, and usually more about community…",N,N],[0,"_1",R[20],"Polyglot programming promises and perils",N,N],[0,"_10",E,"\"Becoming a Contributor\"",N,N],[3,R[17],R[78],"Becoming a Contributor",N,N],[0,"_13",R[20],"I Still Make Silly Mistakes",N,N],[3,R[17],R[79],"Bonus: I Still Make Silly Mistakes",N,N],[0,"_14",R[20],"How the Sausage Gets Made",N,N],[3,R[17],R[80],"Bonus: How the Sausage Gets Made",N,N],[0,"_2",R[20],"Legacy code",N,N],[0,"_3",E,"Building as a community",N,N],[0,"_4",E,"We can have nice things",N,N],[0,"_5",E,"Better than open source contributions",N,N],[0,"_6",E,"It doesn't have to be sexy",N,N],[0,"_7",E,"Katas---or: learning by doing",N,N],[0,"_8",E,"Giving back (by teaching)",N,N],[0,"_9",E,"Open source is mostly just normal people",N,N],[0,"burnout",E,"Burnout",N,N],[3,R[17],R[81],"Bonus: Burnout",N,N],[0,"translating_between_languages",R[20],"Translating Between Languages",N,N],[3,R[17],R[82],"Bonus: Translating Between Languages",N,N],[0,"cysk",R[0],"Brief discussions of important and useful crates around…",N,N],[0,"_1",R[21],"quick-xml",N,N],[0,"_2",E,"clap",N,N],[0,"_3",E,"Rust Language Service",N,N],[0,"rayon",E,"Rayon",N,N],[0,"rocket",E,"Rocket",N,N],[0,"serde",E,"Serde",N,N],[3,R[17],R[83],R[22],N,N],[0,"wasm",R[21],"The wasm tools",N,N],[3,R[17],R[84],R[22],N,N],[0,"interview",R[0],"Interviews: hearing from people around the Rust community!",N,N],[0,"_1",R[23],"Sean Griffin",N,N],[0,R[41],"show_notes::interview::_1","Sean Griffin on Rust, ORMs, and Web Frameworks",N,N],[0,R[42],E,"Sean Griffin on type systems and hopes for Rust's future",N,N],[0,"_2",R[23],"Raph Levien",N,N],[0,R[41],"show_notes::interview::_2","Raph Levien on using Rust to build the Xi editor",N,N],[0,R[42],E,"Raph Levien on Rust's current strengths and places it can…",N,N],[0,"_3",R[23],"Carol (Nichols || Goulding)",N,N],[0,"_4",E,"Jonathan Turner",N,N],[0,R[41],"show_notes::interview::_4","Part 1: Getting to Rust",N,N],[0,R[42],E,"Part 2: Making Rust Better",N,N],[0,"part_3",E,"Part 3: Smoothing the Rust dev story",N,N],[0,"diesel_1_0",R[23],"Diesel 1.0, with Sean Griffin",N,N],[0,R[41],R[24],"Part 1: The past and present of Diesel",N,N],[3,R[17],R[85],R[25],N,N],[0,R[42],R[24],"Part 2: The future of Diesel",N,N],[3,R[17],R[86],R[25],N,N],[0,"integer32",R[23],"Integer32: Carol Nichols || Goulding and Jake Goulding",N,N],[0,"irr_2017",E,"Increasing Rust's Reach 2017",N,N],[0,"anna_liao",R[26],"Anna Liao",N,N],[3,R[27],R[87],R[28],N,N],[0,"lee_baillie",R[26],"Lee Baillie",N,N],[3,R[27],R[88],R[28],N,N],[0,"matt_gathu",R[26],"Matt Gathu",N,N],[3,R[27],R[89],R[28],N,N],[0,"rbr_2017",R[23],"Micro-interviews from Rust Belt Rust 2017",N,N],[0,"andrew_hobden",R[29],"Andrew Hobden",N,N],[3,R[27],R[90],R[28],N,N],[0,"anthony_deschamps",R[29],R[30],N,N],[3,R[27],R[91],R[30],N,N],[0,"arun_kulshreshthra",R[29],"Arun Kulsheshthra",N,N],[3,R[27],R[92],"Arun Kolshreshtha",N,N],[0,"ben_beckwith",R[29],"Ben Beckwith",N,N],[3,R[27],R[93],R[28],N,N],[0,"ben_striegel",R[29],R[31],N,N],[3,R[27],R[94],R[31],N,N],[0,"colin_dean",R[29],"Colin Dean",N,N],[3,R[27],R[95],"Read the episode transcript!",N,N],[0,"esty_thomas",R[29],"Esty Thomas",N,N],[3,R[27],R[96],R[28],N,N],[0,"holden_marcsisin",R[29],R[32],N,N],[3,R[27],R[97],R[32],N,N],[0,"jess_saxeter",R[29],R[33],N,N],[3,R[27],R[98],R[33],N,N],[0,"katie_nolan",R[29],"Katie Nolan",N,N],[3,R[27],R[99],R[28],N,N],[0,"matthias_endler",R[29],"Matthias Endler",N,N],[3,R[27],R[100],R[28],N,N],[0,"parry_wilcox",R[29],"Parry Wilcox",N,N],[3,R[27],R[101],R[28],N,N],[0,"pete_lyons",R[29],"Pete Lyons",N,N],[3,R[27],R[102],R[33],N,N],[0,"thomas_gideon",R[29],"Thomas Gideon",N,N],[3,R[27],R[103],R[34],N,N],[0,"tom_kriezkowski",R[29],"Tom Kriezkowski",N,N],[3,R[27],R[104],R[34],N,N],[0,"meta",R[0],"Meta episodes: content about the show itself.",N,N],[0,"_1","show_notes::meta","Slowing Down",N,N],[0,"_2",E,"Two Milestones",N,N],[0,"news",R[0],"News: occasional episodes dedicated to changes in Rust and…",N,N],[0,"_1",R[35],"One year and counting",N,N],[0,"_2",E,"Let's talk roadmap!",N,N],[0,"_3",E,"Increasing Rust's Reach",N,N],[0,"rust_1_20",E,"Rust 1.20",N,N],[3,"_Bar",R[105],E,N,N],[4,"_Baz",E,E,N,N],[8,"Foo",E,E,N,N],[18,"FOO",E,E,37,N],[18,"_BAR",E,E,38,N],[18,"_BAZ",E,E,39,N],[0,"rust_1_21_1_22",R[35],"Rust 1.21 and 1.22",N,N],[3,R[17],R[106],"News: Rust 1.21 and 1.22",N,N],[0,"rust_1_23",R[35],"Rust 1.23",N,N],[3,R[17],R[107],"News: Rust 1.23",N,N],[0,"rust_1_24",R[35],R[36],N,N],[3,R[17],R[108],R[36],N,N],[0,"rust_1_25",R[35],"Rust 1.25",N,N],[3,R[17],R[109],"News: Rust 1.25",N,N],[5,"demo_match",E,"An example of the new match style.",N,[[["str"]]]],[0,"rust_1_26",R[35],R[37],N,N],[3,R[17],R[110],R[37],N,N],[0,"rust_1_27",R[35],R[38],N,N],[3,R[17],R[111],R[38],N,N],[0,"rust_1_28",R[35],R[39],N,N],[3,R[17],R[112],R[39],N,N],[0,"rust_1_29_1_30",R[35],R[40],N,N],[3,R[17],R[113],R[40],N,N],[0,"rust_1_31",R[35],"A two-part special on Rust 1.31 and the 2018 Edition!",N,N],[0,R[41],R[43],"Rust 1.31 and the 2018 Edition, Part I",N,N],[3,R[17],R[114],"News: Rust 1.31 – The 2018 Edition, Part I",N,N],[0,R[42],R[43],"Rust 1.31 and the 2018 Edition, Part II",N,N],[3,R[17],R[115],"News: Rust 1.31 – The 2018 Edition, Part II",N,N],[0,"rust_1_32",R[35],"Rust 1.32",N,N],[3,R[17],R[116],"News: Rust 1.32",N,N],[14,"main_try",R[0],"Define a macro like `try!` but which works in the context…",N,N],[14,"print_ident_name",E,"Define an ident macro to show how they can capture…",N,N],[11,"from",R[44],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[48],E,E,0,[[[U]],[R[45]]]],[11,R[50],E,E,0,[[["self"]],[T]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[49],E,E,0,[[],[R[45]]]],[11,R[51],E,E,0,[[["self"]],[R[53]]]],[11,"from",R[47],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[48],E,E,1,[[[U]],[R[45]]]],[11,R[50],E,E,1,[[["self"]],[T]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[49],E,E,1,[[],[R[45]]]],[11,R[51],E,E,1,[[["self"]],[R[53]]]],[11,"from",R[2],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[48],E,E,2,[[[U]],[R[45]]]],[11,R[50],E,E,2,[[["self"]],[T]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[49],E,E,2,[[],[R[45]]]],[11,R[51],E,E,2,[[["self"]],[R[53]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[48],E,E,3,[[[U]],[R[45]]]],[11,R[50],E,E,3,[[["self"]],[T]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[49],E,E,3,[[],[R[45]]]],[11,R[51],E,E,3,[[["self"]],[R[53]]]],[11,"from",R[52],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[48],E,E,4,[[[U]],[R[45]]]],[11,R[50],E,E,4,[[["self"]],[T]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[49],E,E,4,[[],[R[45]]]],[11,R[51],E,E,4,[[["self"]],[R[53]]]],[11,"from",R[54],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[56],E,E,5,[[["self"]],[R[4]]]],[11,R[48],E,E,5,[[[U]],[R[45]]]],[11,R[50],E,E,5,[[["self"]],[T]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[49],E,E,5,[[],[R[45]]]],[11,R[51],E,E,5,[[["self"]],[R[53]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[48],E,E,6,[[[U]],[R[45]]]],[11,R[50],E,E,6,[[["self"]],[T]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[49],E,E,6,[[],[R[45]]]],[11,R[51],E,E,6,[[["self"]],[R[53]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[48],E,E,7,[[[U]],[R[45]]]],[11,R[50],E,E,7,[[["self"]],[T]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[49],E,E,7,[[],[R[45]]]],[11,R[51],E,E,7,[[["self"]],[R[53]]]],[11,"from",R[55],E,8,[[[T]],[T]]],[11,R[69],E,E,8,[[],["i"]]],[11,"into",E,E,8,[[],[U]]],[11,R[63],E,E,8,[[["self"]],[T]]],[11,R[64],E,E,8,[[[T],["self"]]]],[11,R[56],E,E,8,[[["self"]],[R[4]]]],[11,R[48],E,E,8,[[[U]],[R[45]]]],[11,R[50],E,E,8,[[["self"]],[T]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[49],E,E,8,[[],[R[45]]]],[11,R[51],E,E,8,[[["self"]],[R[53]]]],[11,"from",R[57],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[48],E,E,10,[[[U]],[R[45]]]],[11,R[50],E,E,10,[[["self"]],[T]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[49],E,E,10,[[],[R[45]]]],[11,R[51],E,E,10,[[["self"]],[R[53]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[56],E,E,11,[[["self"]],[R[4]]]],[11,R[48],E,E,11,[[[U]],[R[45]]]],[11,R[50],E,E,11,[[["self"]],[T]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[49],E,E,11,[[],[R[45]]]],[11,R[51],E,E,11,[[["self"]],[R[53]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[56],E,E,12,[[["self"]],[R[4]]]],[11,R[48],E,E,12,[[[U]],[R[45]]]],[11,R[50],E,E,12,[[["self"]],[T]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[49],E,E,12,[[],[R[45]]]],[11,R[51],E,E,12,[[["self"]],[R[53]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[56],E,E,13,[[["self"]],[R[4]]]],[11,R[48],E,E,13,[[[U]],[R[45]]]],[11,R[50],E,E,13,[[["self"]],[T]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[49],E,E,13,[[],[R[45]]]],[11,R[51],E,E,13,[[["self"]],[R[53]]]],[11,"from",R[58],E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[48],E,E,14,[[[U]],[R[45]]]],[11,R[50],E,E,14,[[["self"]],[T]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[49],E,E,14,[[],[R[45]]]],[11,R[51],E,E,14,[[["self"]],[R[53]]]],[11,"from",R[59],E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[48],E,E,15,[[[U]],[R[45]]]],[11,R[50],E,E,15,[[["self"]],[T]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[49],E,E,15,[[],[R[45]]]],[11,R[51],E,E,15,[[["self"]],[R[53]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[48],E,E,16,[[[U]],[R[45]]]],[11,R[50],E,E,16,[[["self"]],[T]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[49],E,E,16,[[],[R[45]]]],[11,R[51],E,E,16,[[["self"]],[R[53]]]],[11,"from",R[60],E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[48],E,E,40,[[[U]],[R[45]]]],[11,R[50],E,E,40,[[["self"]],[T]]],[11,R[46],E,E,40,[[["self"]],[T]]],[11,R[49],E,E,40,[[],[R[45]]]],[11,R[51],E,E,40,[[["self"]],[R[53]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[48],E,E,41,[[[U]],[R[45]]]],[11,R[50],E,E,41,[[["self"]],[T]]],[11,R[46],E,E,41,[[["self"]],[T]]],[11,R[49],E,E,41,[[],[R[45]]]],[11,R[51],E,E,41,[[["self"]],[R[53]]]],[11,"from",R[61],E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[48],E,E,17,[[[U]],[R[45]]]],[11,R[50],E,E,17,[[["self"]],[T]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[49],E,E,17,[[],[R[45]]]],[11,R[51],E,E,17,[[["self"]],[R[53]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[48],E,E,42,[[[U]],[R[45]]]],[11,R[50],E,E,42,[[["self"]],[T]]],[11,R[46],E,E,42,[[["self"]],[T]]],[11,R[49],E,E,42,[[],[R[45]]]],[11,R[51],E,E,42,[[["self"]],[R[53]]]],[11,"from",R[62],E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[63],E,E,18,[[["self"]],[T]]],[11,R[64],E,E,18,[[[T],["self"]]]],[11,R[48],E,E,18,[[[U]],[R[45]]]],[11,R[50],E,E,18,[[["self"]],[T]]],[11,R[46],E,E,18,[[["self"]],[T]]],[11,R[49],E,E,18,[[],[R[45]]]],[11,R[51],E,E,18,[[["self"]],[R[53]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[48],E,E,19,[[[U]],[R[45]]]],[11,R[50],E,E,19,[[["self"]],[T]]],[11,R[46],E,E,19,[[["self"]],[T]]],[11,R[49],E,E,19,[[],[R[45]]]],[11,R[51],E,E,19,[[["self"]],[R[53]]]],[11,"from",R[65],E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[48],E,E,20,[[[U]],[R[45]]]],[11,R[50],E,E,20,[[["self"]],[T]]],[11,R[46],E,E,20,[[["self"]],[T]]],[11,R[49],E,E,20,[[],[R[45]]]],[11,R[51],E,E,20,[[["self"]],[R[53]]]],[11,"from",R[66],E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[48],E,E,21,[[[U]],[R[45]]]],[11,R[50],E,E,21,[[["self"]],[T]]],[11,R[46],E,E,21,[[["self"]],[T]]],[11,R[49],E,E,21,[[],[R[45]]]],[11,R[51],E,E,21,[[["self"]],[R[53]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[48],E,E,22,[[[U]],[R[45]]]],[11,R[50],E,E,22,[[["self"]],[T]]],[11,R[46],E,E,22,[[["self"]],[T]]],[11,R[49],E,E,22,[[],[R[45]]]],[11,R[51],E,E,22,[[["self"]],[R[53]]]],[11,"from",R[67],E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[48],E,E,23,[[[U]],[R[45]]]],[11,R[50],E,E,23,[[["self"]],[T]]],[11,R[46],E,E,23,[[["self"]],[T]]],[11,R[49],E,E,23,[[],[R[45]]]],[11,R[51],E,E,23,[[["self"]],[R[53]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[63],E,E,24,[[["self"]],[T]]],[11,R[64],E,E,24,[[[T],["self"]]]],[11,R[48],E,E,24,[[[U]],[R[45]]]],[11,R[50],E,E,24,[[["self"]],[T]]],[11,R[46],E,E,24,[[["self"]],[T]]],[11,R[49],E,E,24,[[],[R[45]]]],[11,R[51],E,E,24,[[["self"]],[R[53]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[63],E,E,25,[[["self"]],[T]]],[11,R[64],E,E,25,[[[T],["self"]]]],[11,R[48],E,E,25,[[[U]],[R[45]]]],[11,R[50],E,E,25,[[["self"]],[T]]],[11,R[46],E,E,25,[[["self"]],[T]]],[11,R[49],E,E,25,[[],[R[45]]]],[11,R[51],E,E,25,[[["self"]],[R[53]]]],[11,"from",R[68],E,26,[[[T]],[T]]],[11,R[69],E,E,26,[[],["i"]]],[11,"into",E,E,26,[[],[U]]],[11,R[48],E,E,26,[[[U]],[R[45]]]],[11,R[50],E,E,26,[[["self"]],[T]]],[11,R[46],E,E,26,[[["self"]],[T]]],[11,R[49],E,E,26,[[],[R[45]]]],[11,R[51],E,E,26,[[["self"]],[R[53]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[48],E,E,27,[[[U]],[R[45]]]],[11,R[50],E,E,27,[[["self"]],[T]]],[11,R[46],E,E,27,[[["self"]],[T]]],[11,R[49],E,E,27,[[],[R[45]]]],[11,R[51],E,E,27,[[["self"]],[R[53]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[48],E,E,28,[[[U]],[R[45]]]],[11,R[50],E,E,28,[[["self"]],[T]]],[11,R[46],E,E,28,[[["self"]],[T]]],[11,R[49],E,E,28,[[],[R[45]]]],[11,R[51],E,E,28,[[["self"]],[R[53]]]],[11,"from",R[70],E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[48],E,E,43,[[[U]],[R[45]]]],[11,R[50],E,E,43,[[["self"]],[T]]],[11,R[46],E,E,43,[[["self"]],[T]]],[11,R[49],E,E,43,[[],[R[45]]]],[11,R[51],E,E,43,[[["self"]],[R[53]]]],[11,"from",R[71],E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[48],E,E,44,[[[U]],[R[45]]]],[11,R[50],E,E,44,[[["self"]],[T]]],[11,R[46],E,E,44,[[["self"]],[T]]],[11,R[49],E,E,44,[[],[R[45]]]],[11,R[51],E,E,44,[[["self"]],[R[53]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[48],E,E,29,[[[U]],[R[45]]]],[11,R[50],E,E,29,[[["self"]],[T]]],[11,R[46],E,E,29,[[["self"]],[T]]],[11,R[49],E,E,29,[[],[R[45]]]],[11,R[51],E,E,29,[[["self"]],[R[53]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[48],E,E,30,[[[U]],[R[45]]]],[11,R[50],E,E,30,[[["self"]],[T]]],[11,R[46],E,E,30,[[["self"]],[T]]],[11,R[49],E,E,30,[[],[R[45]]]],[11,R[51],E,E,30,[[["self"]],[R[53]]]],[11,"from",R[72],E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[48],E,E,45,[[[U]],[R[45]]]],[11,R[50],E,E,45,[[["self"]],[T]]],[11,R[46],E,E,45,[[["self"]],[T]]],[11,R[49],E,E,45,[[],[R[45]]]],[11,R[51],E,E,45,[[["self"]],[R[53]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[48],E,E,33,[[[U]],[R[45]]]],[11,R[50],E,E,33,[[["self"]],[T]]],[11,R[46],E,E,33,[[["self"]],[T]]],[11,R[49],E,E,33,[[],[R[45]]]],[11,R[51],E,E,33,[[["self"]],[R[53]]]],[11,"from",R[73],E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[48],E,E,35,[[[U]],[R[45]]]],[11,R[50],E,E,35,[[["self"]],[T]]],[11,R[46],E,E,35,[[["self"]],[T]]],[11,R[49],E,E,35,[[],[R[45]]]],[11,R[51],E,E,35,[[["self"]],[R[53]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[48],E,E,46,[[[U]],[R[45]]]],[11,R[50],E,E,46,[[["self"]],[T]]],[11,R[46],E,E,46,[[["self"]],[T]]],[11,R[49],E,E,46,[[],[R[45]]]],[11,R[51],E,E,46,[[["self"]],[R[53]]]],[11,"from",R[74],E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[48],E,E,47,[[[U]],[R[45]]]],[11,R[50],E,E,47,[[["self"]],[T]]],[11,R[46],E,E,47,[[["self"]],[T]]],[11,R[49],E,E,47,[[],[R[45]]]],[11,R[51],E,E,47,[[["self"]],[R[53]]]],[11,"from",R[75],E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[48],E,E,48,[[[U]],[R[45]]]],[11,R[50],E,E,48,[[["self"]],[T]]],[11,R[46],E,E,48,[[["self"]],[T]]],[11,R[49],E,E,48,[[],[R[45]]]],[11,R[51],E,E,48,[[["self"]],[R[53]]]],[11,"from",R[76],E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[48],E,E,49,[[[U]],[R[45]]]],[11,R[50],E,E,49,[[["self"]],[T]]],[11,R[46],E,E,49,[[["self"]],[T]]],[11,R[49],E,E,49,[[],[R[45]]]],[11,R[51],E,E,49,[[["self"]],[R[53]]]],[11,"from",R[77],E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[48],E,E,36,[[[U]],[R[45]]]],[11,R[50],E,E,36,[[["self"]],[T]]],[11,R[46],E,E,36,[[["self"]],[T]]],[11,R[49],E,E,36,[[],[R[45]]]],[11,R[51],E,E,36,[[["self"]],[R[53]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[48],E,E,50,[[[U]],[R[45]]]],[11,R[50],E,E,50,[[["self"]],[T]]],[11,R[46],E,E,50,[[["self"]],[T]]],[11,R[49],E,E,50,[[],[R[45]]]],[11,R[51],E,E,50,[[["self"]],[R[53]]]],[11,"from",R[78],E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[48],E,E,51,[[[U]],[R[45]]]],[11,R[50],E,E,51,[[["self"]],[T]]],[11,R[46],E,E,51,[[["self"]],[T]]],[11,R[49],E,E,51,[[],[R[45]]]],[11,R[51],E,E,51,[[["self"]],[R[53]]]],[11,"from",R[79],E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[48],E,E,52,[[[U]],[R[45]]]],[11,R[50],E,E,52,[[["self"]],[T]]],[11,R[46],E,E,52,[[["self"]],[T]]],[11,R[49],E,E,52,[[],[R[45]]]],[11,R[51],E,E,52,[[["self"]],[R[53]]]],[11,"from",R[80],E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[48],E,E,53,[[[U]],[R[45]]]],[11,R[50],E,E,53,[[["self"]],[T]]],[11,R[46],E,E,53,[[["self"]],[T]]],[11,R[49],E,E,53,[[],[R[45]]]],[11,R[51],E,E,53,[[["self"]],[R[53]]]],[11,"from",R[81],E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[48],E,E,54,[[[U]],[R[45]]]],[11,R[50],E,E,54,[[["self"]],[T]]],[11,R[46],E,E,54,[[["self"]],[T]]],[11,R[49],E,E,54,[[],[R[45]]]],[11,R[51],E,E,54,[[["self"]],[R[53]]]],[11,"from",R[82],E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[48],E,E,55,[[[U]],[R[45]]]],[11,R[50],E,E,55,[[["self"]],[T]]],[11,R[46],E,E,55,[[["self"]],[T]]],[11,R[49],E,E,55,[[],[R[45]]]],[11,R[51],E,E,55,[[["self"]],[R[53]]]],[11,"from",R[83],E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[48],E,E,56,[[[U]],[R[45]]]],[11,R[50],E,E,56,[[["self"]],[T]]],[11,R[46],E,E,56,[[["self"]],[T]]],[11,R[49],E,E,56,[[],[R[45]]]],[11,R[51],E,E,56,[[["self"]],[R[53]]]],[11,"from",R[84],E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[48],E,E,57,[[[U]],[R[45]]]],[11,R[50],E,E,57,[[["self"]],[T]]],[11,R[46],E,E,57,[[["self"]],[T]]],[11,R[49],E,E,57,[[],[R[45]]]],[11,R[51],E,E,57,[[["self"]],[R[53]]]],[11,"from",R[85],E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[48],E,E,58,[[[U]],[R[45]]]],[11,R[50],E,E,58,[[["self"]],[T]]],[11,R[46],E,E,58,[[["self"]],[T]]],[11,R[49],E,E,58,[[],[R[45]]]],[11,R[51],E,E,58,[[["self"]],[R[53]]]],[11,"from",R[86],E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[48],E,E,59,[[[U]],[R[45]]]],[11,R[50],E,E,59,[[["self"]],[T]]],[11,R[46],E,E,59,[[["self"]],[T]]],[11,R[49],E,E,59,[[],[R[45]]]],[11,R[51],E,E,59,[[["self"]],[R[53]]]],[11,"from",R[87],E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[48],E,E,60,[[[U]],[R[45]]]],[11,R[50],E,E,60,[[["self"]],[T]]],[11,R[46],E,E,60,[[["self"]],[T]]],[11,R[49],E,E,60,[[],[R[45]]]],[11,R[51],E,E,60,[[["self"]],[R[53]]]],[11,"from",R[88],E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[48],E,E,61,[[[U]],[R[45]]]],[11,R[50],E,E,61,[[["self"]],[T]]],[11,R[46],E,E,61,[[["self"]],[T]]],[11,R[49],E,E,61,[[],[R[45]]]],[11,R[51],E,E,61,[[["self"]],[R[53]]]],[11,"from",R[89],E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[48],E,E,62,[[[U]],[R[45]]]],[11,R[50],E,E,62,[[["self"]],[T]]],[11,R[46],E,E,62,[[["self"]],[T]]],[11,R[49],E,E,62,[[],[R[45]]]],[11,R[51],E,E,62,[[["self"]],[R[53]]]],[11,"from",R[90],E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[48],E,E,63,[[[U]],[R[45]]]],[11,R[50],E,E,63,[[["self"]],[T]]],[11,R[46],E,E,63,[[["self"]],[T]]],[11,R[49],E,E,63,[[],[R[45]]]],[11,R[51],E,E,63,[[["self"]],[R[53]]]],[11,"from",R[91],E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[48],E,E,64,[[[U]],[R[45]]]],[11,R[50],E,E,64,[[["self"]],[T]]],[11,R[46],E,E,64,[[["self"]],[T]]],[11,R[49],E,E,64,[[],[R[45]]]],[11,R[51],E,E,64,[[["self"]],[R[53]]]],[11,"from",R[92],E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[48],E,E,65,[[[U]],[R[45]]]],[11,R[50],E,E,65,[[["self"]],[T]]],[11,R[46],E,E,65,[[["self"]],[T]]],[11,R[49],E,E,65,[[],[R[45]]]],[11,R[51],E,E,65,[[["self"]],[R[53]]]],[11,"from",R[93],E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[48],E,E,66,[[[U]],[R[45]]]],[11,R[50],E,E,66,[[["self"]],[T]]],[11,R[46],E,E,66,[[["self"]],[T]]],[11,R[49],E,E,66,[[],[R[45]]]],[11,R[51],E,E,66,[[["self"]],[R[53]]]],[11,"from",R[94],E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[48],E,E,67,[[[U]],[R[45]]]],[11,R[50],E,E,67,[[["self"]],[T]]],[11,R[46],E,E,67,[[["self"]],[T]]],[11,R[49],E,E,67,[[],[R[45]]]],[11,R[51],E,E,67,[[["self"]],[R[53]]]],[11,"from",R[95],E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[48],E,E,68,[[[U]],[R[45]]]],[11,R[50],E,E,68,[[["self"]],[T]]],[11,R[46],E,E,68,[[["self"]],[T]]],[11,R[49],E,E,68,[[],[R[45]]]],[11,R[51],E,E,68,[[["self"]],[R[53]]]],[11,"from",R[96],E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[48],E,E,69,[[[U]],[R[45]]]],[11,R[50],E,E,69,[[["self"]],[T]]],[11,R[46],E,E,69,[[["self"]],[T]]],[11,R[49],E,E,69,[[],[R[45]]]],[11,R[51],E,E,69,[[["self"]],[R[53]]]],[11,"from",R[97],E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[48],E,E,70,[[[U]],[R[45]]]],[11,R[50],E,E,70,[[["self"]],[T]]],[11,R[46],E,E,70,[[["self"]],[T]]],[11,R[49],E,E,70,[[],[R[45]]]],[11,R[51],E,E,70,[[["self"]],[R[53]]]],[11,"from",R[98],E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[48],E,E,71,[[[U]],[R[45]]]],[11,R[50],E,E,71,[[["self"]],[T]]],[11,R[46],E,E,71,[[["self"]],[T]]],[11,R[49],E,E,71,[[],[R[45]]]],[11,R[51],E,E,71,[[["self"]],[R[53]]]],[11,"from",R[99],E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[48],E,E,72,[[[U]],[R[45]]]],[11,R[50],E,E,72,[[["self"]],[T]]],[11,R[46],E,E,72,[[["self"]],[T]]],[11,R[49],E,E,72,[[],[R[45]]]],[11,R[51],E,E,72,[[["self"]],[R[53]]]],[11,"from",R[100],E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[48],E,E,73,[[[U]],[R[45]]]],[11,R[50],E,E,73,[[["self"]],[T]]],[11,R[46],E,E,73,[[["self"]],[T]]],[11,R[49],E,E,73,[[],[R[45]]]],[11,R[51],E,E,73,[[["self"]],[R[53]]]],[11,"from",R[101],E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[48],E,E,74,[[[U]],[R[45]]]],[11,R[50],E,E,74,[[["self"]],[T]]],[11,R[46],E,E,74,[[["self"]],[T]]],[11,R[49],E,E,74,[[],[R[45]]]],[11,R[51],E,E,74,[[["self"]],[R[53]]]],[11,"from",R[102],E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[48],E,E,75,[[[U]],[R[45]]]],[11,R[50],E,E,75,[[["self"]],[T]]],[11,R[46],E,E,75,[[["self"]],[T]]],[11,R[49],E,E,75,[[],[R[45]]]],[11,R[51],E,E,75,[[["self"]],[R[53]]]],[11,"from",R[103],E,76,[[[T]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[48],E,E,76,[[[U]],[R[45]]]],[11,R[50],E,E,76,[[["self"]],[T]]],[11,R[46],E,E,76,[[["self"]],[T]]],[11,R[49],E,E,76,[[],[R[45]]]],[11,R[51],E,E,76,[[["self"]],[R[53]]]],[11,"from",R[104],E,77,[[[T]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[48],E,E,77,[[[U]],[R[45]]]],[11,R[50],E,E,77,[[["self"]],[T]]],[11,R[46],E,E,77,[[["self"]],[T]]],[11,R[49],E,E,77,[[],[R[45]]]],[11,R[51],E,E,77,[[["self"]],[R[53]]]],[11,"from",R[105],E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[48],E,E,38,[[[U]],[R[45]]]],[11,R[50],E,E,38,[[["self"]],[T]]],[11,R[46],E,E,38,[[["self"]],[T]]],[11,R[49],E,E,38,[[],[R[45]]]],[11,R[51],E,E,38,[[["self"]],[R[53]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[48],E,E,39,[[[U]],[R[45]]]],[11,R[50],E,E,39,[[["self"]],[T]]],[11,R[46],E,E,39,[[["self"]],[T]]],[11,R[49],E,E,39,[[],[R[45]]]],[11,R[51],E,E,39,[[["self"]],[R[53]]]],[11,"from",R[106],E,78,[[[T]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[48],E,E,78,[[[U]],[R[45]]]],[11,R[50],E,E,78,[[["self"]],[T]]],[11,R[46],E,E,78,[[["self"]],[T]]],[11,R[49],E,E,78,[[],[R[45]]]],[11,R[51],E,E,78,[[["self"]],[R[53]]]],[11,"from",R[107],E,79,[[[T]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[48],E,E,79,[[[U]],[R[45]]]],[11,R[50],E,E,79,[[["self"]],[T]]],[11,R[46],E,E,79,[[["self"]],[T]]],[11,R[49],E,E,79,[[],[R[45]]]],[11,R[51],E,E,79,[[["self"]],[R[53]]]],[11,"from",R[108],E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[48],E,E,80,[[[U]],[R[45]]]],[11,R[50],E,E,80,[[["self"]],[T]]],[11,R[46],E,E,80,[[["self"]],[T]]],[11,R[49],E,E,80,[[],[R[45]]]],[11,R[51],E,E,80,[[["self"]],[R[53]]]],[11,"from",R[109],E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[48],E,E,81,[[[U]],[R[45]]]],[11,R[50],E,E,81,[[["self"]],[T]]],[11,R[46],E,E,81,[[["self"]],[T]]],[11,R[49],E,E,81,[[],[R[45]]]],[11,R[51],E,E,81,[[["self"]],[R[53]]]],[11,"from",R[110],E,82,[[[T]],[T]]],[11,"into",E,E,82,[[],[U]]],[11,R[48],E,E,82,[[[U]],[R[45]]]],[11,R[50],E,E,82,[[["self"]],[T]]],[11,R[46],E,E,82,[[["self"]],[T]]],[11,R[49],E,E,82,[[],[R[45]]]],[11,R[51],E,E,82,[[["self"]],[R[53]]]],[11,"from",R[111],E,83,[[[T]],[T]]],[11,"into",E,E,83,[[],[U]]],[11,R[48],E,E,83,[[[U]],[R[45]]]],[11,R[50],E,E,83,[[["self"]],[T]]],[11,R[46],E,E,83,[[["self"]],[T]]],[11,R[49],E,E,83,[[],[R[45]]]],[11,R[51],E,E,83,[[["self"]],[R[53]]]],[11,"from",R[112],E,84,[[[T]],[T]]],[11,"into",E,E,84,[[],[U]]],[11,R[48],E,E,84,[[[U]],[R[45]]]],[11,R[50],E,E,84,[[["self"]],[T]]],[11,R[46],E,E,84,[[["self"]],[T]]],[11,R[49],E,E,84,[[],[R[45]]]],[11,R[51],E,E,84,[[["self"]],[R[53]]]],[11,"from",R[113],E,85,[[[T]],[T]]],[11,"into",E,E,85,[[],[U]]],[11,R[48],E,E,85,[[[U]],[R[45]]]],[11,R[50],E,E,85,[[["self"]],[T]]],[11,R[46],E,E,85,[[["self"]],[T]]],[11,R[49],E,E,85,[[],[R[45]]]],[11,R[51],E,E,85,[[["self"]],[R[53]]]],[11,"from",R[114],E,86,[[[T]],[T]]],[11,"into",E,E,86,[[],[U]]],[11,R[48],E,E,86,[[[U]],[R[45]]]],[11,R[50],E,E,86,[[["self"]],[T]]],[11,R[46],E,E,86,[[["self"]],[T]]],[11,R[49],E,E,86,[[],[R[45]]]],[11,R[51],E,E,86,[[["self"]],[R[53]]]],[11,"from",R[115],E,87,[[[T]],[T]]],[11,"into",E,E,87,[[],[U]]],[11,R[48],E,E,87,[[[U]],[R[45]]]],[11,R[50],E,E,87,[[["self"]],[T]]],[11,R[46],E,E,87,[[["self"]],[T]]],[11,R[49],E,E,87,[[],[R[45]]]],[11,R[51],E,E,87,[[["self"]],[R[53]]]],[11,"from",R[116],E,88,[[[T]],[T]]],[11,"into",E,E,88,[[],[U]]],[11,R[48],E,E,88,[[[U]],[R[45]]]],[11,R[50],E,E,88,[[["self"]],[T]]],[11,R[46],E,E,88,[[["self"]],[T]]],[11,R[49],E,E,88,[[],[R[45]]]],[11,R[51],E,E,88,[[["self"]],[R[53]]]],[11,R[117],R[55],E,8,[[["self"]],["i64"]]],[11,"prepare",R[71],E,29,[[["self"]],[R[4]]]],[11,"prepare",E,E,30,[[["self"]],[R[4]]]],[11,"eat",E,E,30,[[["self"]],[R[4]]]],[11,"eq",R[55],E,8,[[[R[118]],["self"]],["bool"]]],[11,"ne",E,E,8,[[[R[118]],["self"]],["bool"]]],[11,"eq",R[68],E,26,[[[R[119]],["self"]],["bool"]]],[11,"ne",E,E,26,[[[R[119]],["self"]],["bool"]]],[11,"eq",R[77],E,36,[[["point"],["self"]],["bool"]]],[11,"ne",E,E,36,[[["point"],["self"]],["bool"]]],[11,"as_ref",R[66],E,22,[[["self"]]]],[11,"assert_receiver_is_total_eq",R[68],E,26,[[["self"]]]],[11,"clone",R[55],E,8,[[["self"]],[R[118]]]],[11,"clone",R[62],E,18,[[["self"]],[R[120]]]],[11,"clone",R[67],E,24,[[["self"]],[R[13]]]],[11,"clone",E,E,25,[[["self"]],[R[121]]]],[11,"next",R[55],E,8,[[["self"]],[["option",[R[118]]],[R[118]]]]],[11,"next",R[68],E,26,[[["self"]],[[R[119]],["option",[R[119]]]]]],[11,"default",R[73],E,35,[[],["point"]]],[11,"fmt",R[47],E,1,[[["self"],[R[122]]],[R[45]]]],[11,"fmt",R[2],E,2,[[["self"],[R[122]]],[R[45]]]],[11,"fmt",E,E,3,[[["self"],[R[122]]],[R[45]]]],[11,"fmt",R[55],E,8,[[["self"],[R[122]]],[R[45]]]],[11,"fmt",R[67],E,23,[[["self"],[R[122]]],[R[45]]]],[11,"fmt",E,E,24,[[["self"],[R[122]]],[R[45]]]],[11,"fmt",E,E,25,[[["self"],[R[122]]],[R[45]]]],[11,"fmt",R[68],E,26,[[["self"],[R[122]]],[R[45]]]],[11,"fmt",R[77],E,36,[[["self"],[R[122]]],[R[45]]]],[11,"fmt",R[54],E,5,[[["self"],[R[122]]],[R[45]]]],[11,"fmt",R[55],E,8,[[["self"],[R[122]]],[R[45]]]],[11,"fmt",R[57],E,11,[[["self"],[R[122]]],[R[45]]]],[11,"fmt",E,E,12,[[["self"],[R[122]]],[R[45]]]],[11,"fmt",E,E,13,[[["self"],[R[122]]],[R[45]]]],[11,"add",R[55],E,8,[[[R[118]]],[R[118]]]],[11,"add",R[72],E,33,[[["point"]],["point"]]],[11,"deref",R[60],E,40,[[["self"]],["dereftarget"]]],[11,"deref",R[66],E,22,[[["self"]]]],[11,"deref",R[68],E,26,[[["self"]],[R[4]]]],[11,"deref",E,E,28,[[["self"]],[R[4]]]],[11,R[50],R[66],E,22,[[["self"]]]]],"p":[[3,"TVShow"],[3,"Circle"],[3,R[123]],[4,R[124]],[3,R[125]],[3,R[126]],[3,R[127]],[4,"Maybe"],[3,R[128]],[8,R[129]],[3,R[130]],[4,R[131]],[4,"Strong"],[4,R[132]],[4,R[133]],[3,R[134]],[4,R[135]],[3,"FileData"],[3,R[136]],[3,R[137]],[3,R[138]],[3,R[139]],[3,R[140]],[3,R[141]],[3,R[142]],[3,R[143]],[3,R[144]],[3,R[145]],[4,R[146]],[4,R[147]],[4,R[148]],[8,"Eatable"],[8,"Nomable"],[3,"Point"],[8,"Eatable"],[3,"Point"],[3,"Point"],[8,"Foo"],[3,"_Bar"],[4,"_Baz"],[3,"Origin"],[3,R[149]],[3,R[150]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[27]],[3,R[27]],[3,R[27]],[3,R[27]],[3,R[27]],[3,R[27]],[3,R[27]],[3,R[27]],[3,R[27]],[3,R[27]],[3,R[27]],[3,R[27]],[3,R[27]],[3,R[27]],[3,R[27]],[3,R[27]],[3,R[27]],[3,R[27]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]],[3,R[17]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);